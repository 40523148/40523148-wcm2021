var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'topic', 'text': '', 'tags': '', 'url': 'topic.html'}, {'title': '更改網誌', 'text': '1 建立一個倉儲(公開) \n 2 Setting中設為master branch \n 3 clone 網址到隨身碟( https://127.0.0.1:9443 這種，上一步產生的) \n *網站有了，增加內容 \n 4再資料夾(tmp)中建(cad2020) \n 5 git clone 這個網址 \n 6 cd cad2020\xa0 \n 7 git submodule add \xa0 https://github.com/mdecourse/cmsimde.git \xa0cmsimde \n 8到資料夾，找到up_dir，把內容Ctrl A到\\cad2020 \n (第9步起就是更改網頁) \n 9 python wsgi.py (啟動python) \n 10然後複製因為前一步產生的新網址，Ctrl C到Google看看 \n 11修改後一定要記得generate page \n (回到cmd) \n 12 cd.. \n 13 git add . (add和點點中間一定要記得空白) \n 14 git commit -m "你要附註的東西" \n 15 git push,帳號密碼 \n \n', 'tags': '', 'url': '更改網誌.html'}, {'title': '每周上課內容', 'text': '', 'tags': '', 'url': '每周上課內容.html'}, {'title': 'W1-W2', 'text': '1.介紹網際網路管理這門課程，並且到\xa0 http://a.kmol.info:88/ \xa0下載 kmol2021_spring_v2.7z \n 2.利用\xa0 https://github.com/mdecourse/cmstemplate \xa0 建立個人倉儲與網站 \n 3.說明與 cmsimde 編輯及轉靜態網頁有關的認知 \n', 'tags': '', 'url': 'W1-W2.html'}, {'title': 'W3', 'text': '分組 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '簡要說明網際內容管理課程開課緣由, 以及課程目標. 其次說明 wcm2021 Topic0 專案執行目的 \n \n import requests\nimport bs4\n# for os.environ and os.system()\nimport os\n# for geting html file path\nimport pathlib\n\xa0\xa0\n# for pythn 3.9\n\xa0\xa0\n\'\'\'\nurl:\xa0 \'class_ajax.php\',\ndata: { pselyr: pselyr, pselclss: pselclss\n\'\'\'\nsemester = \'1092\'\nclassno = \'42311\'\ncolumn = True\n\xa0\xa0\nif semester == None:\n\xa0\xa0\xa0\xa0semester = \'1091\'\nif classno == None:\n\xa0\xa0\xa0\xa0# 42311 is 設一甲\n\xa0\xa0\xa0\xa0classno = \'42311\'\n\xa0\xa0\xa0\xa0\xa0\xa0\nheaders = {\'X-Requested-With\': \'XMLHttpRequest\'}\n\xa0\xa0\nurl = \'https://qry.nfu.edu.tw/class_ajax.php\'\npost_var = {\'pselyr\': semester, \'pselclss\': classno}\n\xa0\xa0\nresult = requests.post(url, data = post_var, headers = headers)\n\xa0\xa0\nsoup = bs4.BeautifulSoup(result.content, \'lxml\')\n\xa0\xa0\n# 先除掉所有 anchor\nfor a in soup.findAll(\'a\'):\n\xa0\xa0\xa0\xa0# bs3 語法\n\xa0\xa0\xa0\xa0#a.replaceWithChildren()\n\xa0\xa0\xa0\xa0# bs4 語法, 將標註與內容拆開\n\xa0\xa0\xa0\xa0a.unwrap()\n\xa0\xa0\n# 根據輸出設定, 取出 class=\'tbcls\' 的 table 資料\ntable = soup.find(\'table\', {\'class\': \'tbcls\'})\n\xa0\xa0\n# 重建 table, 設定邊線為 1 pixel\noutput = "<table border=\'1\'>"\n\xa0\xa0\nfor i in table.contents:\n\xa0\xa0\xa0\xa0# 利用 replace 復原\xa0\n\xa0\xa0\xa0\xa0output += str(i).replace("\xa0", " ")\noutput += "</table>"\n# print(output)\n# 將 output 寫入 w1_class_local.html\nwith open("w1_class_local.html", "w", encoding="utf-8") as file:\n\xa0\xa0\xa0\xa0file.write(output)\n# 利用 os.system() 以 default browser 開啟 w1_class_local.html\nfilePath = pathlib.Path(__file__).parent.absolute()\n#print(filePath)\n# set firefox as default browser and start url to open html file\nos.system("start file:///" + str(filePath) + "\\\\w1_class_local.html") \n \n 將程式碼貼上 start_ipv4.bat 裡的編輯器，然後 Tools > go\xa0 \n W5 \n 更新CMSIMDE \n 更新完成，從 data>tmp>wcm2021>cmsimde>up_dir 把新的檔案拉進 wcm2021 的資料夾裡 \n 啟用 ssh \n 進入 data>PuTTY>puttygen.exe>Generate>滑鼠在上面空白處移動，創造一把key>全選>複製>貼到 github 設定裡的SSH>要Save private key 檔案名稱為 → 學號.ppk \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W6', 'text': '建立 Heroku 帳號： 進入 \xa0 https://heroku.com ，用學校gmail登記一個 Heroku 帳號。 \n 去 \xa0 http://a.kmol.info:88 \xa0，下載heroku.7z \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'w7', 'text': 'Heroku \n 1. 建立 Heroku app： 登入 Heroku 後, 以 s + 學號建立第一個 app。 \n 2. 下 載 Heroku CLI：從 \xa0 http://a.kmol.info:88/heroku.7z \xa0 下載 Heroku cli 程式檔案, 解壓縮到電腦。 \n 3. 修改命令搜尋路徑： \xa0修改隨身系統的啟動批次檔案，讓 Windows 的命令視窗中可以執行 heroku.exe，（將 heroku.exe 所在目錄位置, 設為 Windows 搜尋路徑之一），再重新啟動start_ipv4 / ipv6.bat \n 4. 測試 heroku 執行：打 \xa0heroku version 看有沒有回應使用版本。 \n 5. 設定 heroku 代理主機：因為我們用自己的筆電，因此改 在 y:\\home_ipv4 下的 .giconfig 中,\xa0 以 git config --global http.proxy "http://your_proxy:port" 進行設定. \n 在 start_ipv4.bat 中加入: \n \n \n REM for heroku login\nREM set HTTP_PROXY=http://[2001:288:6004:17::53]:3128\nREM set HTTPS_PROXY=http://[2001:288:6004:17::53]:3128 \n (因為是使用自己的網路，要在開頭打上 REM 使它變成註解) \n \n \n 6.設定同步倉儲： 透過 git remote add (Heroku 指令：heroku git:remote -a heroku_倉儲_名稱，之後在 heroku login 狀態下，直接用 git push) 在近端設定一個連線到 Heroku 倉儲的代號，在每次更新 Github Pages 倉儲後，把同步至 Heroku。 \n 7. 以 git 進行提交推送： 用 heroku git:remote -a 設定的同步倉儲其推送名稱內定為 "heroku", 用 git push heroku 將改版內容推送到對應的 Heroku app 倉儲. \n \n 指令操作步驟: \n \n \n # 以 interactive 模式登入 Heroku, 完成後產生 y:\\home_ipv4\\_netrc\nheroku login -i\n# 針對已經登入的 Heroku 帳號下的 taiwan-01 app, 設為此倉儲的 remote 同步倉儲, 且在倉儲中會自建名稱為 heroku 的 remoate site.\nheroku git:remote -a taiwan-no1 \n \n 然後我就卡在這了 \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'W10', 'text': '1.到\xa0 http://a.kmol.info:88/ \xa0下載\xa0 robodk522_kmol.7z \n 2.到\xa0 https://sqlitebrowser.org/dl/ \xa0下載\xa0DB Browser for SQLite - .zip (no installer) for 64-bit \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '執行robodk \n 1.到 ipv4.bat 編輯 \n \n 2.啟動 ipv4.bat，執行 pip install robodk \n \n 3.拉 pick_and_place.py 到 SciTE 編輯器中 \n \n 4.Tools go \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': 'OBS + Youtube 分組直播錄影 \n 1.建立頻道 \n \n 2.進行直播 \n \n 3.完成手機驗證 \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '開始遠距教學 \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '分組網站連結建立 \n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '第15週自評分數 \n 老師回答我們課程遇到的問題 \n 每組錄製30分鐘開會操作影片 \n \n', 'tags': '', 'url': 'W15.html'}, {'title': '教室排課表', 'text': '電腦輔助設計室排課表 \n \n import requests\nimport bs4\n# for os.environ and os.system\nimport os\n# for geting html file path\nimport pathlib\n\xa0\xa0\xa0\n# for pythn 3.9\nproxy = \'http://[2001:288:6004:17::69]:3128\'\n\xa0\xa0\xa0\nos.environ[\'http_proxy\'] = proxy\nos.environ[\'HTTP_PROXY\'] = proxy\nos.environ[\'https_proxy\'] = proxy\nos.environ[\'HTTPS_PROXY\'] = proxy\n\xa0\xa0\xa0\n\'\'\'\nurl:\xa0 \'jclassroom_ajax.php\',\ndata: { pselyr: pselyr, pselclssroom: pselclssroom },\n\'\'\'\nsemester = \'1092\'\nclassroomno = \'BGA0710\'\ncolumn = True\n\xa0\xa0\xa0\nif semester == None:\n\xa0\xa0\xa0\xa0semester = \'1092\'\nif classroomno == None:\n\xa0\xa0\xa0\xa0# BGA0810 電腦輔助設計室\n\xa0\xa0\xa0\xa0classroomno = \'BGA0710\'\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\nheaders = {\'X-Requested-With\': \'XMLHttpRequest\'}\n\xa0\xa0\xa0\nurl = \'https://qry.nfu.edu.tw/jclassroom_ajax.php\'\npost_var = {\'pselyr\': semester, \'pselclssroom\': classroomno}\n\xa0\xa0\xa0\nresult = requests.post(url, data = post_var, headers = headers)\n\xa0\xa0\xa0\nsoup = bs4.BeautifulSoup(result.content, \'lxml\')\n\xa0\xa0\xa0\n# 先除掉所有 anchor\nfor a in soup.findAll(\'a\'):\n\xa0\xa0\xa0\xa0# bs3 語法\n\xa0\xa0\xa0\xa0#a.replaceWithChildren()\n\xa0\xa0\xa0\xa0# bs4 語法, 將標註與內容拆開\n\xa0\xa0\xa0\xa0a.unwrap()\n\xa0\xa0\xa0\n# 根據輸出設定, 取出 class=\'tbcls\' 的 table 資料\ntable = soup.find(\'table\', {\'class\': \'tbcls\'})\n\xa0\xa0\xa0\n# 重建 table, 設定邊線為 1 pixel\noutput = "<table border=\'1\'>"\n\xa0\xa0\xa0\nfor i in table.contents:\n\xa0\xa0\xa0\xa0# 利用 replace 復原\xa0\n\xa0\xa0\xa0\xa0output += str(i).replace("\xa0", " ")\noutput += "</table>"\n#print(output)\n\xa0\xa0\xa0\n# 將 output 寫入 w1_classroom.html\nfileName = "w1_classroom.html"\nwith open(fileName, "w", encoding="utf-8") as file:\n\xa0\xa0\xa0\xa0file.write(output)\n# 利用 os.system() 以 default browser 開啟 w1_class_local.html\nfilePath = pathlib.Path(__file__).parent.absolute()\n#print(filePath)\n# set firefox as default browser and start url to open html file\nos.system("start file:///" + str(filePath) + "\\\\" + fileName) \n 在這之中其中有一行,是因為使用著習慣設定會在空白出現&nbsp 而將那一行更改成 \n output += str(i).replace("&amp;nbsp", " &nbsp; ") \n 即可 \n 每一間都有屬於自己的教室編碼 \n 要在classroomno 打出相對的教室編碼 \n 即能查出課表 \n最後成品網頁 \n \n', 'tags': '', 'url': '教室排課表.html'}, {'title': '錯誤排除', 'text': '', 'tags': '', 'url': '錯誤排除.html'}, {'title': 'cmsimde錯誤', 'text': 'github 送上去的資料沒有綠勾，cmsimde開不起來，要刪除cmsimde重新安裝。 \n \n Delete the relevant section from the \xa0 .gitmodules \xa0 file. \n Stage the \xa0 .gitmodules \xa0 changes: git add .gitmodules \n Delete the relevant section from \xa0 .git/config . \n Remove the submodule files from the working tree and index: git rm --cached path_to_submodule \xa0 (no trailing slash). \n Remove the submodule\'s \xa0 .git \xa0 directory: rm -rf .git/modules/path_to_submodule \n Commit the changes: git commit -m "Removed submodule <name>" \n Delete the now untracked submodule files: rm -rf path_to_submodule \n \n 步驟 \n 1.把wcm2021的 .gitmodules \xa0刪掉 \n 2.打 git add .gitmodules指令 \n 3.打git rm --cached cmsimde \n 4.打rm -rf .git/modules/path_to_submodule #無法用rm，直接進到cp2020/.git檔/modules/刪掉cmsimde資料夾 \n 5.打git commit -m "cmsimde" \n 6.打rm -rf path_to_submodule\xa0#無法用rm，直接進到cp2020刪掉cmsimde資料夾 \n 7.git submodule add \xa0 https://github.com/mdecourse/cmsimde \n 8.git add . \n 9.git commit -m "name" \n 10.git push \n 常用指令 \n git version /檢查git \n path /目前命令列的指令 \n git clone /複製遠端的內容下載 \n git submodule add https://github.com/mdecourse/cmsimde.git cmsimde /建立cmsimde目錄已子模組存在加進來從網址下載 \n git config --global http.proxy http://[2001:288:6004:17::69]:3128 /設定proxy \n git config --global user.name "40523148" /設定身份名子 \n git config --global user.email "40523148@mde.nfu.edu.tw" /設定身份信箱 \n python wsgi.py /用python執行動態網頁 \n git add . /增加所做的是納入進去 \n git commit -m "名稱" /設定標籤名子 \n git push /推送資料 \n git pull \n git clone --recurese-submadules 網址 \n git remote add gitlab \n git push gitlab 網址 \n \n', 'tags': '', 'url': 'cmsimde錯誤.html'}, {'title': '在家無法推送進端到遠端', 'text': '我使用的解決方法 \n 啟用ssh \n 要先改.git裡面的config \n [remote "origin"]把之前的https加上# \n \n 開啟putty(putty.exe)\xa0 \xa0將設定調好 \n 點github.com\xa0 案load \n 設定proxy(使用自家網路、手機網路請選None) \n 看你的網路連到哪一台 就打一樣的proxy \n 打開SSH裡面的Auth \n 選擇你所生產的金鑰檔案(.ppk) \n 回到session點選save再open \n \n 出現上圖就代表成功 \n 一樣先進到cd2021\xa0 →\xa0cd tmp/cd2021 \n git add . \n git commit -m "此更新的主旨" \n git push \n (此方法不需打帳號密碼) \n \n \n \n', 'tags': '', 'url': '在家無法推送進端到遠端.html'}, {'title': 'SSH', 'text': '為什麼要使用SSH? \n 不使用SSH時，在git push至倉儲必須輸入密碼，然而，在公開場所輸入密碼顯然是件高風險的事! \n 因此，藉由在本地跟遠端倉儲存入密鑰，在git push時即可藉由密鑰做身分認證，不必在每次推送時，還需要輸入密碼，大大減少曝光風險。 \n \n 如何使用SSH? \n \n step1. \n 進入shell環境 \n \n \n \n step2. \n 使用以下指令創建key \n ssh-keygen -t rsa -b 4096 -C "使用者學號" \n 並確定是否成功創建 \n \n \n step3. \n 利用Putty中的 puttygen.exe 將id_rsa解讀成private key \n \n \n step4. \n 進入倉儲頁面，點選setting，進入SSH & GPG keys中點選New SSH key,將public key存入遠端倉儲 \n \n \n step5. \n 編譯start.bat，加入以下 \n \n \n set GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe \n \n step6. \n 編譯.git下的config，使其變為SSH認證 \n \n [core]\n\xa0\xa0\xa0\xa0repositoryformatversion = 0\n\xa0\xa0\xa0\xa0filemode = false\n\xa0\xa0\xa0\xa0bare = false\n\xa0\xa0\xa0\xa0logallrefupdates = true\n\xa0\xa0\xa0\xa0symlinks = false\n\xa0\xa0\xa0\xa0ignorecase = true\n[submodule]\n\xa0\xa0\xa0\xa0active = .\n[remote "origin"]\n\xa0\xa0\xa0\xa0#url = https://github.com/mdecourse/cad2020.git\n\xa0\xa0\xa0\xa0url = git@github.com:mdecourse/cad2020.git\n\xa0\xa0\xa0\xa0fetch = +refs/heads/*:refs/remotes/origin/*\n[branch "master"]\n\xa0\xa0\xa0\xa0remote = origin\n\xa0\xa0\xa0\xa0merge = refs/heads/master\n[submodule "cmsimde"]\n\xa0\xa0\xa0\xa0url = https://github.com/mdecourse/cmsimde.git\n \n final step \n 進入 putty.exe，將本地的private key做login \n \n \n \n *完成後請測試推送，成功使用SSH推送後，倉儲的SSH頁面的鑰匙會變成綠色的，並在下方顯示推送日期 \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': '心得與評分', 'text': '60 \n 本學期的課上的很坎坷，也經歷到遠距上課，雖然我開始的課程沒有跟上進度，雖然說現在也沒有跟到進度，但我努力的排除了遇到的一些問題，像是在家沒辦法推到遠端的問題，還有PUTTY設定要注意有沒有少打到字，HEROKU能不能同步，雖然這部分我嘗試好久都沒成功，但是我都有嘗試去解決，但只能解決前面2個遇到的問題。我知道這種類別的課程很重要，在未來，就是電腦的時代，所以要懂得一些關於電腦的設定，一些網站的架設，但這都關係到程式語言，這到現在對於我來說還是不懂的多，所以我在未來還是要努力，才能跟上世界的腳步，所以希望老師能給我及格，可以順利畢業', 'tags': '', 'url': '心得與評分.html'}]};